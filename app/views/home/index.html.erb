<% content_for :inline_styles do %>
<style>
    html,
    body,
    #game-container {
      margin: 0;
      padding: 0;
    }
    #game-container {
      min-width: 100vw;
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    #game-container>canvas {
      border-radius: 5px;
    }
</style>
<% end %>

<% content_for :inline_scripts do %>
<script>
  const config = {
    type: Phaser.AUTO, // Which renderer to use
    width: 1024, // Canvas width in pixels
    height: 768, // Canvas height in pixels
    parent: "game-container", // ID of the DOM element to add the canvas to
    scene: {
      preload: preload,
      create: create,
      update: update
    }
  };

  const game = new Phaser.Game(config);

  function preload() {
    // this.load.image("tiles", "/tuxmon-sample-32px-extruded.png");
    // this.load.tilemapTiledJSON("town", "/tuxemon-town.json");
    this.load.image("tiles", "/tmw_desert_spacing.png");
    this.load.tilemapTiledJSON("town", "/desert.json");
  }

  function create() {
    // Parameters are the name you gave the tileset in Tiled and then the key of the tileset image in
    // Phaser's cache (i.e. the name you used in preload)
    var map = this.make.tilemap({ key: 'town' });
    // const tileset = map.addTilesetImage("tuxmon-sample-32px-extruded", "tiles");
    const tileset = map.addTilesetImage("Desert", "tiles");

    // Parameters: layer name (or index) from Tiled, tileset, x, y
    const belowLayer = map.createStaticLayer("Below", tileset, 0, 0);
    const worldLayer = map.createStaticLayer("Ground", tileset, 0, 0);
    const aboveLayer = map.createStaticLayer("Above", tileset, 0, 0);

    const camera = this.cameras.main;

    // Set up the arrows to control the camera
    const cursors = this.input.keyboard.createCursorKeys();
    controls = new Phaser.Cameras.Controls.FixedKeyControl({
      camera: camera,
      left: cursors.left,
      right: cursors.right,
      up: cursors.up,
      down: cursors.down,
      speed: 0.5
    });

    // Constrain the camera so that it isn't allowed to move outside the width/height of tilemap
    camera.setBounds(0, 0, map.widthInPixels, map.heightInPixels);
  }

  function update(time, delta) {
     controls.update(delta);
  }
</script>
<% end %>

<div id="game-container"></div>
